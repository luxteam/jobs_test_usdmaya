source shelfCommands.mel;

global proc auto_config(){
    if(`pluginInfo -query -loaded RadeonProRender` == 0){
        loadPlugin RadeonProRender;
    }

    // int $selected[] = `optionVar -q "RPR_DevicesSelected"`;


    string $scriptPath = stringRemovePrefix (`whatIs auto_config`, "Mel procedure found in: ");
    string $pathArray[] = stringToStringArray($scriptPath, "/");
    string $resultsDirectory = "";

    int $i = 0;
    for ($i = 0; $i < size($pathArray)-1; $i++){       //- to delete *.mel name
        $resultsDirectory = $resultsDirectory + $pathArray[$i] + "/";
    }

    string $filePath = $resultsDirectory + "Devices.config.json";
    int $fileID = `fopen $filePath "w"`;
    fprint $fileID "{\n";

    string $gpuDevices[];
    if (`optionVar -as "RPR_DevicesName"` == 0){
        $gpuDevices[0] = "CPU";
    }else{
        $gpuDevices = `optionVar -q "RPR_DevicesName"`;
        for($i=0; $i < size($gpuDevices); $i++){
            $gpuDevices[$i] = `substitute "/" $gpuDevices[$i] ""`;
        }

        stringArrayInsertAtIndex(size($gpuDevices), $gpuDevices, "CPU");
    }
    string $text;
    for($i=0; $i < size($gpuDevices); $i++){
        if($i+1 == size($gpuDevices)){
            fprint $fileID ("  \"" + $gpuDevices[$i] + "\": \"" + $i + "\"\n");
        }else{
            fprint $fileID ("  \"" + $gpuDevices[$i] + "\": \"" + $i + "\",\n");
        }
    }

    fprint $fileID "}";
    fclose $fileID;

    evalDeferred("quit -abort");
}